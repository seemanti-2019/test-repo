{"ast":null,"code":"var _jsxFileName = \"C:\\\\seemanti\\\\projects\\\\my-test-proj\\\\src\\\\dashboard.js\";\nimport React from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport { Container, Jumbotron, Row, Col, ListGroup, ListGroupItem, ButtonGroup, ToggleButton } from 'react-bootstrap';\nconst mapStyles = {\n  width: '100vh',\n  height: '100%'\n};\nlet myLatLng = {\n  lat: '22.5726',\n  lng: '88.3639'\n};\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.username);\n  }\n\n  selectMap(val) {\n    alert(val);\n  }\n\n  buttonClick(val) {\n    console.log(val);\n    this.myLatLng = {\n      lat: val.lat,\n      lng: val.lng\n    };\n\n    if (this.props.google) {\n      console.log(this.props.google);\n    }\n  }\n\n  renderMarkers(map, maps) {\n    let marker = new maps.Marker({\n      position: myLatLng,\n      map,\n      title: 'Hello World!'\n    });\n  }\n\n  render() {\n    let cityList = [{\n      id: 1,\n      name: 'Delhi',\n      lat: '28.7041',\n      lng: '77.1025'\n    }, {\n      id: 2,\n      name: 'Mumbai',\n      lat: '19.0760',\n      lng: '72.8777'\n    }, {\n      id: 3,\n      name: 'Kolkata',\n      lat: '22.5726',\n      lng: '88.3639'\n    }, {\n      id: 4,\n      name: 'Channai',\n      lat: '13.0827',\n      lng: '80.2707'\n    }, {\n      id: 5,\n      name: 'Pune',\n      lat: '18.5204',\n      lng: '73.8567'\n    }, {\n      id: 6,\n      name: 'Bangalore',\n      lat: '12.9716',\n      lng: '77.5946'\n    }, {\n      id: 7,\n      name: 'Hyderabad',\n      lat: '17.3850',\n      lng: '78.4867'\n    }, {\n      id: 8,\n      name: 'Kochi',\n      lat: '9.9312',\n      lng: '76.2673'\n    }];\n    let cityNames = cityList.map(data => {\n      return React.createElement(ListGroupItem, {\n        key: data.id,\n        id: data.id,\n        href: \"#\",\n        action: true,\n        onClick: () => this.buttonClick(data),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, data.name) //<li key={data.id}><a href=\"#\" style={{ textDecoration: 'none' } } onClick={() => this.buttonClick(data)}>{data.name}</a></li>\n      ;\n    });\n    let displayMarkers = cityList.map(data => {\n      return React.createElement(Marker, {\n        key: data.id,\n        position: {\n          lat: data.lat,\n          lng: data.lng\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      });\n    });\n    var points = [{\n      lat: 22.02,\n      lng: 77.01\n    }, {\n      lat: 22.03,\n      lng: 77.02\n    }, {\n      lat: 22.03,\n      lng: 77.04\n    }, {\n      lat: 22.05,\n      lng: 77.02\n    }];\n    var bounds = new this.props.google.maps.LatLngBounds();\n\n    for (var i = 0; i < points.length; i++) {\n      bounds.extend(points[i]);\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Hello \", this.props.username, \" \")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(ButtonGroup, {\n      toggle: true,\n      className: \"mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      id: \"displaySingle\",\n      type: \"radio\",\n      name: \"radio\",\n      defaultChecked: true,\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Single\"), React.createElement(ToggleButton, {\n      id: \"displayMultiple\",\n      type: \"radio\",\n      name: \"radio\",\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Multiple\"))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Lists Of Cities\"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, cityNames)), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Map, {\n      id: \"mymap\",\n      google: this.props.google,\n      zoom: 5,\n      style: mapStyles,\n      initialCenter: {\n        lat: 22.5726,\n        lng: 77.3639\n      },\n      bounds: bounds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      position: myLatLng,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(Marker, {\n      position: {\n        lat: 19.0760,\n        lng: 72.8777\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAwu42ZjnzWV4-LQe5-t72Ujt3OykdqZ_w'\n})(Dashboard);","map":{"version":3,"sources":["C:/seemanti/projects/my-test-proj/src/dashboard.js"],"names":["React","Map","GoogleApiWrapper","Marker","Container","Jumbotron","Row","Col","ListGroup","ListGroupItem","ButtonGroup","ToggleButton","mapStyles","width","height","myLatLng","lat","lng","Dashboard","Component","constructor","props","console","log","username","selectMap","val","alert","buttonClick","google","renderMarkers","map","maps","marker","position","title","render","cityList","id","name","cityNames","data","displayMarkers","points","bounds","LatLngBounds","i","length","extend","padding","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\nimport { Container, Jumbotron, Row, Col, ListGroup, ListGroupItem, ButtonGroup, ToggleButton } from 'react-bootstrap';\r\n\r\n\r\nconst mapStyles = {\r\n    width: '100vh',\r\n    height: '100%'\r\n}\r\n\r\nlet myLatLng = {\r\n    lat: '22.5726',\r\n    lng: '88.3639'\r\n};\r\n   \r\nclass Dashboard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(this.props.username);\r\n    }\r\n    \r\n    selectMap(val){\r\n        alert(val);\r\n    }\r\n    \r\n    buttonClick(val){\r\n        console.log(val);\r\n        \r\n        this.myLatLng = {\r\n            lat : val.lat,\r\n            lng : val.lng\r\n        }\r\n        if(this.props.google){\r\n            console.log(this.props.google);\r\n        }        \r\n    }\r\n    \r\n    renderMarkers(map, maps) {\r\n        let marker = new maps.Marker({\r\n          position: myLatLng,\r\n          map,\r\n          title: 'Hello World!'\r\n        });\r\n      }\r\n      \r\n    render() {\r\n        let cityList = [\r\n            {\r\n                id : 1, \r\n                name : 'Delhi',\r\n                lat : '28.7041',\r\n                lng : '77.1025'\r\n            },\r\n            {\r\n                id : 2, \r\n                name : 'Mumbai',\r\n                lat : '19.0760',\r\n                lng : '72.8777'\r\n            },\r\n            {\r\n                id : 3, \r\n                name : 'Kolkata',\r\n                lat : '22.5726',\r\n                lng : '88.3639'\r\n            },\r\n            {\r\n                id : 4,\r\n                name : 'Channai',\r\n                lat : '13.0827',\r\n                lng : '80.2707'\r\n            },\r\n            {\r\n                id : 5,\r\n                name : 'Pune',\r\n                lat : '18.5204',\r\n                lng : '73.8567'\r\n            },\r\n            {\r\n                id : 6, \r\n                name : 'Bangalore',\r\n                lat : '12.9716',\r\n                lng : '77.5946'\r\n            },\r\n            {\r\n                id : 7,\r\n                name : 'Hyderabad',\r\n                lat : '17.3850',\r\n                lng : '78.4867'\r\n            },\r\n            {\r\n                id : 8,\r\n                name : 'Kochi',\r\n                lat : '9.9312',\r\n                lng : '76.2673'\r\n            },       \r\n    \r\n        ];\r\n        let cityNames = cityList.map(data => {\r\n            return (\r\n                <ListGroupItem key={data.id} id={data.id} href=\"#\" action onClick={() => this.buttonClick(data)}>{data.name}</ListGroupItem>\r\n\r\n                //<li key={data.id}><a href=\"#\" style={{ textDecoration: 'none' } } onClick={() => this.buttonClick(data)}>{data.name}</a></li>\r\n            );\r\n        })\r\n        let displayMarkers = cityList.map(data => {\r\n            return (\r\n                <Marker key={data.id} position={{ lat : data.lat, lng : data.lng}} />\r\n            );\r\n        })\r\n        var points = [\r\n            { lat: 22.02, lng: 77.01 },\r\n            { lat: 22.03, lng: 77.02 },\r\n            { lat: 22.03, lng: 77.04 },\r\n            { lat: 22.05, lng: 77.02 }\r\n        ];\r\n        var bounds = new this.props.google.maps.LatLngBounds();\r\n        for (var i = 0; i < points.length; i++) {\r\n            bounds.extend(points[i]);\r\n}\r\n\r\n        return (\r\n            <Container>\r\n                <Jumbotron style={{padding: 10}}>\r\n                    <Row>\r\n                        <Col><h3>Hello {this.props.username} </h3></Col>\r\n                        <Col>\r\n                            <ButtonGroup toggle className=\"mt-2\">\r\n                                <ToggleButton id=\"displaySingle\" type=\"radio\" name=\"radio\" defaultChecked value=\"1\">\r\n                                    Single\r\n                                </ToggleButton>\r\n                                <ToggleButton id=\"displayMultiple\" type=\"radio\" name=\"radio\" value=\"2\">\r\n                                    Multiple\r\n                                </ToggleButton>\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </Jumbotron>\r\n                <Row>\r\n                    <Col>                        \r\n                        <h4>Lists Of Cities</h4>\r\n                        <ListGroup>\r\n                            {cityNames}\r\n                        </ListGroup>                        \r\n                    </Col>\r\n                    <Col>\r\n                        <Map id=\"mymap\"\r\n                            google={this.props.google}\r\n                            zoom={5}\r\n                            style={mapStyles}\r\n                            initialCenter={{ lat: 22.5726, lng: 77.3639 }}\r\n                            bounds={bounds}\r\n                        >\r\n                            <Marker position={myLatLng} />\r\n                    <Marker position={{ lat : 19.0760,lng : 72.8777  }} />\r\n                            {/*displayMarkers*/}\r\n                        </Map>\r\n                    </Col>\r\n                </Row>               \r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyAwu42ZjnzWV4-LQe5-t72Ujt3OykdqZ_w'\r\n  })(Dashboard);  "]},"metadata":{},"sourceType":"module"}